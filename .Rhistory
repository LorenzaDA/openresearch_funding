summary(dd7$startfase3_9)  # 8,548 ppl participated at this wave (but they might not have participated
dd7b <- dd7[dd7$startfase3_9 == "Yes" & !is.na(dd7$startfase3_9), ] # 8548
head(dd7b)
vars <- c("idc", "ethn", "sex", "mat_edu",
"puberty")
dd7c <- dd7b[ , names(dd7b) %in% vars]
saveRDS(dd7c, "GenR_attrition_analyses_sample.rds")
str(dd7)
dd8 <- dd7 %>%
mutate(mat_edu = ordered(mat_edu),
income = ordered(income)) %>%
rename(id = idc,
anxdep_t1 = sum_anx_9m,
anxdep_t2 = sum_anx_14,
withdep_t1 = sum_wit_9m,
withdep_t2 = sum_wit_14,
somatic_t1 = sum_som_9m,
somatic_t2 = sum_som_14,
social_t1 = sum_sop_9m,
social_t2 = sum_sop_14,
thought_t1 = sum_tho_9m,
thought_t2 = sum_tho_14,
att_t1 = sum_att_9m,
att_t2 = sum_att_14,
rulebr_t1 = sum_rul_9m,
rulebr_t2 = sum_rul_14,
agg_t1 = sum_agg_9m,
agg_t2 = sum_agg_14)
str(dd8)
cols <- c("int_t1", "int_t2",
"ext_t1", "ext_t2",
"anxdep_t1", "anxdep_t2",
"withdep_t1", "withdep_t2",
"somatic_t1", "somatic_t2",
"social_t1", "social_t2",
"thought_t1", "thought_t2",
"att_t1", "att_t2",
"rulebr_t1", "rulebr_t2",
"agg_t1", "agg_t2")
dd8[cols] <- lapply(dd8[cols], sqrt)
summary(dd8[cols])
cols2 <- grep("mdt", names(dd8), value = T) # find the vars with the mdt pattern
cols2
dd8 <- dd8[!is.na(dd8$mdt1_t1) & !is.na(dd8$mdt2_t1) & !is.na(dd8$mdt3_t1) & !is.na(dd8$mdt4_t1) & !is.na(dd8$mdt5_t1) & !is.na(dd8$nt_t1), ] # 2,586 children with this resting state data
dd8 <- dd8[!is.na(dd8$mri_consent_f09) & dd8$mri_consent_f09 == "yes", ] # all of them have consent at wave 9
temp <- dd8[!is.na(dd8$mdt1_t2) & !is.na(dd8$mdt2_t2) & !is.na(dd8$mdt3_t2) & !is.na(dd8$mdt4_t2) & !is.na(dd8$mdt5_t2) & !is.na(dd8$nt_t2), ] # 1,031 children with this resting state data
children <- temp$id # extract ids
sum(duplicated(children)) # checked to see if there were any duplicates - none
sum(is.na(dd8$int_t1)) # 374
sum(is.na(dd8$ext_t1)) # 376
dd9 <- dd8[!is.na(dd8$int_t1) & !is.na(dd8$ext_t1),] # 2209 - a total of 377 children excluded
dd10 <- dd9[dd9$num_vols_bold_f09 == 200 & dd9$mean_bold_rms_f09 <= 0.25 & is.na(dd9$exclude_reg_prob_bold_f09) & dd9$exclude_bold_f09 == "include", ] # still 2209....didthey just put the useable data???
summary(dd9$num_vols_bold_f09) # values with min and max
summary(dd9$mean_bold_rms_f09) # this is indeed values
summary(dd9$exclude_reg_prob_bold_f09) # all NAs - how is that ok? well in his criteria it seems like it should be NA if you include
summary(dd9$exclude_bold_f09) # all include - makes sense?
dd11 <- dd10[dd10$exclude_incidental_f09 == "include",  ] # 2208, 1 person only
dd12 <- dd11[dd11$mr750_softwareversionshort_dicom == "v24", ]  # 2032, 176 children
dd12$exclude <- NA
for (i in 1:nrow(dd12)){
# for each row of the df
if(dd12$id[i] %in% children){
# if the child has data at @13
if(dd12$mri_consent_f13[i] == "yes" &
dd12$num_vols_bold_f13[i] == 200 & dd12$mean_bold_rms_f13[i] <= 0.25
& is.na(dd12$exclude_reg_prob_bold_f13[i]) & dd12$exclude_bold_f09[i] == "include"
& dd12$exclude_incidental_f13[i] == "include")
# if a set of criteria met
dd12$exclude[i] <- "no"
# do not exclude
}else{
dd12$exclude[i] <- " yes"
# otherwise, exclude
}
}
dd12$exclude <- factor(dd12$exclude)
summary(dd12$exclude) # 825 children who should NOT be excluded
dd13 <- dd12[dd12$exclude == "no", ] # get final df
summary(dd13)
sum(duplicated(dd13$mother)) # 14 mothers with multiple children
set.seed(2022)
dd13 <- dd13[sample(nrow(dd13)), ] # randomly order data
final_dd <- dd13[!duplicated(dd13$mother), ] # 811
saveRDS(final_dd, paste0(indata, "genr_data_imp.rds"))
names(final_dd)
exc <- c("idm", "mother", "startfase3_9", "educm", "income_toimpute", "educm5", "income5",
"mr750_softwareversionshort_dicom", "mri_consent_f09", "mri_consent_f13",
"rsfmri_has_nii_f09", "rsfmri_has_nii_f13", "has_braces_mri_f09",
"has_braces_mri_f13", "exclude_incidental_f09", "exclude_incidental_f13",
"num_vols_bold_f09", "num_vols_bold_f13", "mean_bold_rms_f09", "mean_bold_rms_f13",
"exclude_bold_f09", "exclude_bold_f13", "exclude_reg_prob_bold_f09",
"exclude_reg_prob_bold_f13", "educm_2", "exclude") # set the variables which we do not need
final_dd <- final_dd[ , names(final_dd) %notin% exc]
names(final_dd)
str(final_dd)
summary(final_dd)
saveRDS(final_dd, paste0(indata, "genr_data_main.rds"))
png(paste0(fig, "hists_rsfmri.png"))
png(paste0(fig, "hists_rsfmri_t1.png"))
par(mfrow = c(3,2))
hist(final_dd$mdt1_t1, nclass = 50, main = "FA t1", col="blue")
hist(final_dd$mdt2_t1, nclass = 50, main = "FA t2", col="blue")
hist(final_dd$mdt3_t1, nclass = 50, main = "MD t1", col="blue")
hist(final_dd$mdt4_t1, nclass = 50, main = "MD t2", col="blue")
hist(final_dd$mdt5_t1, nclass = 50, main = "MD t2", col="blue")
hist(final_dd$nt_t1, nclass = 50, main = "MD t2", col="blue")
dev.off()
png(paste0(fig, "hists_rsfmri_t1.png"))
par(mfrow = c(3,2))
hist(final_dd$mdt1_t1, nclass = 50, main = "MDT 1 T1", col="blue")
hist(final_dd$mdt2_t1, nclass = 50, main = "MDT 2 T1", col="blue")
hist(final_dd$mdt3_t1, nclass = 50, main = "MDT 3 T1", col="blue")
hist(final_dd$mdt4_t1, nclass = 50, main = "MDT 4 T1", col="blue")
hist(final_dd$mdt5_t1, nclass = 50, main = "MDT 5 T1", col="blue")
hist(final_dd$nt_t1, nclass = 50, main = "NT T1", col="blue")
dev.off()
png(paste0(fig, "hists_rsfmri_t2.png"))
par(mfrow = c(3,2))
hist(final_dd$mdt1_t2, nclass = 50, main = "MDT 1 T2", col="blue")
hist(final_dd$mdt2_t2, nclass = 50, main = "MDT 2 T2", col="blue")
hist(final_dd$mdt3_t2, nclass = 50, main = "MDT 3 T2", col="blue")
hist(final_dd$mdt4_t2, nclass = 50, main = "MDT 4 T2", col="blue")
hist(final_dd$mdt5_t2, nclass = 50, main = "MDT 5 T2", col="blue")
hist(final_dd$nt_t2, nclass = 50, main = "NT T2", col="blue")
dev.off()
png(paste0(res, "hists_cbcl.png"))
par(mfrow = c(2,2))
hist(final_dd$int_t1, nclass = 50, main = "Internalising problems t1", col="blue")
hist(final_dd$int_t2, nclass = 50, main = "Internalising problems t2", col="blue")
hist(final_dd$ext_t1, nclass = 50, main = "Externalising problems t1", col="blue")
hist(final_dd$ext_t2, nclass = 50, main = "Externalising problems t2", col="blue")
dev.off()
png(paste0(fig, "hists_cbcl.png"))
par(mfrow = c(2,2))
hist(final_dd$int_t1, nclass = 50, main = "Internalising problems t1", col="blue")
hist(final_dd$int_t2, nclass = 50, main = "Internalising problems t2", col="blue")
hist(final_dd$ext_t1, nclass = 50, main = "Externalising problems t1", col="blue")
hist(final_dd$ext_t2, nclass = 50, main = "Externalising problems t2", col="blue")
dev.off()
names(final_dd)
a <- ggplot(final_dd, aes(int_t1, mdt1_t2)) +
geom_smooth()
b <- ggplot(final_dd, aes(int_t1, mdt2_t2)) +
geom_smooth()
c <- ggplot(final_dd, aes(int_t1, mdt3_t2)) +
geom_smooth()
d <- ggplot(final_dd, aes(int_t1, mdt4_t2)) +
geom_smooth()
e <- ggplot(final_dd, aes(int_t1, mdt5_t2)) +
geom_smooth
f <- ggplot(final_dd, aes(int_t1, nt_t2)) +
geom_smooth
a <- ggplot(final_dd, aes(int_t1, mdt1_t2)) +
geom_smooth()
b <- ggplot(final_dd, aes(int_t1, mdt2_t2)) +
geom_smooth()
c <- ggplot(final_dd, aes(int_t1, mdt3_t2)) +
geom_smooth()
d <- ggplot(final_dd, aes(int_t1, mdt4_t2)) +
geom_smooth()
e <- ggplot(final_dd, aes(int_t1, mdt5_t2)) +
geom_smooth()
f <- ggplot(final_dd, aes(int_t1, nt_t2)) +
geom_smooth()
all <- ggarrange(a, b, c, d, e, f + rremove("x.text"),
labels = c("A", "B", "C", "D", " E", "F"),
ncol = 2, nrow = 3)
all
all
ggsave("InternalisingTOrsfMRI.png", path = fig)
ggplot(final_dd, aes(int_t2, mdt1_t1)) +
geom_smooth()
a <- ggplot(final_dd, aes(int_t2, mdt1_t1)) +
geom_smooth()
b <- ggplot(final_dd, aes(int_t1, mdt2_t2)) +
geom_smooth()
c <- ggplot(final_dd, aes(int_t1, mdt3_t2)) +
geom_smooth()
d <- ggplot(final_dd, aes(int_t1, mdt4_t2)) +
geom_smooth()
e <- ggplot(final_dd, aes(int_t1, mdt5_t2)) +
geom_smooth()
f <- ggplot(final_dd, aes(int_t1, nt_t2)) +
geom_smooth()
all <- ggarrange(a, b, c, d, e, f + rremove("x.text"),
labels = c("A", "B", "C", "D", " E", "F"),
ncol = 2, nrow = 3)
all
a <- ggplot(final_dd, aes(mdt1_t1, int_t2)) +
geom_smooth()
b <- ggplot(final_dd, aes(mdt2_t1, int_t2)) +
geom_smooth()
c <- ggplot(final_dd, aes(mdt3_t1, int_t2)) +
geom_smooth()
d <- ggplot(final_dd, aes(mdt4_t1, int_t2)) +
geom_smooth()
e <- ggplot(final_dd, aes(mdt5_t1, int_t2)) +
geom_smooth()
f <- ggplot(final_dd, aes(nt_t1, int_t2)) +
geom_smooth()
all <- ggarrange(a, b, c, d, e, f + rremove("x.text"),
labels = c("A", "B", "C", "D", " E", "F"),
ncol = 2, nrow = 3)
warnings()
all <- ggarrange(a, b, c, d, e, f + rremove("x.text"),
labels = c("A", "B", "C", "D", " E", "F"),
ncol = 2, nrow = 3)
all
ggsave("rsfMRI_to_Internalising.png", path = fig)
final_dd$mdt1_t1
a <- ggplot(final_dd, aes(mdt1_t1, int_t2)) +
geom_smooth()
b <- ggplot(final_dd, aes(mdt2_t1, int_t2)) +
geom_smooth()
c <- ggplot(final_dd, aes(mdt3_t1, int_t2)) +
geom_smooth()
d <- ggplot(final_dd, aes(mdt4_t1, int_t2)) +
geom_smooth()
e <- ggplot(final_dd, aes(mdt5_t1, int_t2)) +
geom_smooth()
f <- ggplot(final_dd, aes(nt_t1, int_t2)) +
geom_smooth()
# NB 10: Removed 39 rows containing non-finite values (stat_smooth). --> ???
# it seems it's bc of the distribution of the rsfMRI data
all <- ggarrange(a, b, c, d, e, f + rremove("x.text"),
labels = c("A", "B", "C", "D", " E", "F"),
ncol = 2, nrow = 3)
all
ggsave("rsfMRI_to_Internalising.png", path = fig)
summary(mdt1_t1)
summary(final_dd$mdt1_t1)
summary(final_dd$mdt2_t1)
summary(final_dd[cols2])
a <- ggplot(final_dd, aes(ext_t1, mdt1_t2)) +
geom_smooth()
b <- ggplot(final_dd, aes(ext_t1, mdt2_t2)) +
geom_smooth()
c <- ggplot(final_dd, aes(ext_t1, mdt3_t2)) +
geom_smooth()
d <- ggplot(final_dd, aes(ext_t1, mdt4_t2)) +
geom_smooth()
e <- ggplot(final_dd, aes(ext_t1, mdt5_t2)) +
geom_smooth()
f <- ggplot(final_dd, aes(ext_t1, nt_t2)) +
geom_smooth()
all <- ggarrange(a, b, c, d, e, f + rremove("x.text"),
labels = c("A", "B", "C", "D", " E", "F"),
ncol = 2, nrow = 3)
all
ggsave("externalisingTOrsfMRI.png", path = fig)
a <- ggplot(final_dd, aes(mdt1_t1, ext_t2)) +
geom_smooth()
b <- ggplot(final_dd, aes(mdt2_t1, ext_t2)) +
geom_smooth()
c <- ggplot(final_dd, aes(mdt3_t1, ext_t2)) +
geom_smooth()
d <- ggplot(final_dd, aes(mdt4_t1, ext_t2)) +
geom_smooth()
e <- ggplot(final_dd, aes(mdt5_t1, ext_t2)) +
geom_smooth()
f <- ggplot(final_dd, aes(nt_t1, ext_t2)) +
geom_smooth()
# NB 10: Removed 39 rows containing non-finite values (stat_smooth). --> ???
# it seems it's bc of the distribution of the rsfMRI data
all <- ggarrange(a, b, c, d, e, f + rremove("x.text"),
labels = c("A", "B", "C", "D", " E", "F"),
ncol = 2, nrow = 3)
all
ggsave("rsfMRI_to_externalising.png", path = fig)
a <- ggplot(final_dd, aes(x = sex, y = int_t2, fill = sex)) + geom_violin(trim = F)
b <- ggplot(final_dd, aes(x = parent_edu, y = int_t2, fill = parent_edu)) + geom_violin(trim = F)
c <- ggplot(final_dd, aes(x = ethn, y = int_t2, fill = ethn)) + geom_violin(trim = F)
all <- ggarrange(a, b, c + rremove("x.text"),
labels = c("A", "B", "C"),
ncol = 3, nrow = 1)
names(final_dd)
b <- ggplot(final_dd, aes(x = mat_edu, y = int_t2, fill = parent_edu)) + geom_violin(trim = F)
all <- ggarrange(a, b, c + rremove("x.text"),
labels = c("A", "B", "C"),
ncol = 3, nrow = 1)
all
a <- ggplot(final_dd, aes(x = sex, y = int_t2, fill = sex)) + geom_violin(trim = F)
b <- ggplot(final_dd, aes(x = mat_edu, y = int_t2, fill = mat_edu)) + geom_violin(trim = F)
c <- ggplot(final_dd, aes(x = ethn, y = int_t2, fill = ethn)) + geom_violin(trim = F)
all <- ggarrange(a, b, c + rremove("x.text"),
labels = c("A", "B", "C"),
ncol = 3, nrow = 1)
all
ggsave("Int_by_covs.png", path = fig)
all <- ggarrange(a, b, c + rremove("x.text"),
labels = c("A", "B", "C"),
ncol = 1, nrow = 3)
all
ggsave("Int_by_covs.png", path = fig)
a <- ggplot(final_dd, aes(x = sex, y = ext_t2, fill = sex)) + geom_violin(trim = F)
b <- ggplot(final_dd, aes(x = mat_edu, y = ext_t2, fill = mat_edu)) + geom_violin(trim = F)
c <- ggplot(final_dd, aes(x = ethn, y = ext_t2, fill = ethn)) + geom_violin(trim = F)
all <- ggarrange(a, b, c + rremove("x.text"),
labels = c("A", "B", "C"),
ncol = 1, nrow = 3)
all
ggsave("Ext_by_covs.png", path = fig)
a <- ggplot(final_dd, aes(x = sex, y = nt_t2, fill = sex)) + geom_violin(trim = F)
b <- ggplot(final_dd, aes(x = mat_edu, y = nt_t2, fill = mat_edu)) + geom_violin(trim = F)
c <- ggplot(final_dd, aes(x = ethn, y = nt_t2, fill = ethn)) + geom_violin(trim = F)
all <- ggarrange(a, b, c + rremove("x.text"),
labels = c("A", "B", "C"),
ncol = 1, nrow = 3)
all
ggsave("NT_by_covs_ABCD.png", path = res)
ggsave("NT_by_covs_ABCD.png", path = fig)
ggsave("MD_by_covs.png", path = res)
ggsave("NT_by_covs.png", path = fig)
a <- ggplot(final_dd, aes(x = sex, y = mdt2_t2, fill = sex)) + geom_violin(trim = F)
b <- ggplot(final_dd, aes(x = mat_edu, y = mdt2_t2, fill = mat_edu)) + geom_violin(trim = F)
c <- ggplot(final_dd, aes(x = ethn, y = mdt2_t2, fill = ethn)) + geom_violin(trim = F)
all <- ggarrange(a, b, c + rremove("x.text"),
labels = c("A", "B", "C"),
ncol = 1, nrow = 3)
all
ggsave("mdt2_by_covs.png", path = fig)
a <- ggplot(final_dd, aes(x = sex, y = mdt1_t2, fill = sex)) + geom_violin(trim = F)
b <- ggplot(final_dd, aes(x = mat_edu, y = mdt1_t2, fill = mat_edu)) + geom_violin(trim = F)
c <- ggplot(final_dd, aes(x = ethn, y = mdt1_t2, fill = ethn)) + geom_violin(trim = F)
all <- ggarrange(a, b, c + rremove("x.text"),
labels = c("A", "B", "C"),
ncol = 1, nrow = 3)
all
ggsave("mdt1_by_covs.png", path = fig)
a <- ggplot(final_dd, aes(x = sex, y = mdt3_t2, fill = sex)) + geom_violin(trim = F)
b <- ggplot(final_dd, aes(x = mat_edu, y = mdt3_t2, fill = mat_edu)) + geom_violin(trim = F)
c <- ggplot(final_dd, aes(x = ethn, y = mdt3_t2, fill = ethn)) + geom_violin(trim = F)
all <- ggarrange(a, b, c + rremove("x.text"),
labels = c("A", "B", "C"),
ncol = 1, nrow = 3)
all
ggsave("mdt3_by_covs.png", path = fig)
a <- ggplot(final_dd, aes(x = sex, y = mdt4_t2, fill = sex)) + geom_violin(trim = F)
b <- ggplot(final_dd, aes(x = mat_edu, y = mdt4_t2, fill = mat_edu)) + geom_violin(trim = F)
c <- ggplot(final_dd, aes(x = ethn, y = mdt4_t2, fill = ethn)) + geom_violin(trim = F)
all <- ggarrange(a, b, c + rremove("x.text"),
labels = c("A", "B", "C"),
ncol = 1, nrow = 3)
all
ggsave("mdt4_by_covs.png", path = fig)
a <- ggplot(final_dd, aes(x = sex, y = mdt5_t2, fill = sex)) + geom_violin(trim = F)
b <- ggplot(final_dd, aes(x = mat_edu, y = mdt5_t2, fill = mat_edu)) + geom_violin(trim = F)
c <- ggplot(final_dd, aes(x = ethn, y = mdt5_t2, fill = ethn)) + geom_violin(trim = F)
all <- ggarrange(a, b, c + rremove("x.text"),
labels = c("A", "B", "C"),
ncol = 1, nrow = 3)
all
ggsave("mdt5_by_covs.png", path = fig)
cols2
cols
names(final_dd)
all_cols <- c(cols2, cols, "sex", "ethn",  "mat_edu", "agemri_t1",
"agemri_t2", "agediff_t1", "agediff_t2")
all_cols
temp <- final_dd[ , names(final_dd) %in% all_cols)]
temp <- final_dd[ , names(final_dd) %in% all_cols]
names(temp)
# select relevant vars
all_cols <- c(cols2, cols, "sex", "ethn",  "mat_edu", "agemri_t1",
"agemri_t2", "agediff_t1", "agediff_t2")
all_cols
temp <- final_dd[ , names(final_dd) %in% all_cols]
names(temp)
table1 <- tbl_summary(temp) %>%
modify_header(label = "**Variable**") %>%
italicize_levels()
table1
table1 %>%
as_flex_table() %>%
flextable::save_as_docx(table1,
path = paste0(fig, "table1.docx"))
rm(list=ls())
source("/Users/lorenzadallaglio/Documents/PhD thesis/rsfMRI_directionality/Directionality-rsfMRI-psychiatricproblems-children-scripts/0.Source_file.R")
final_dd <- readRDS(paste0(indata, "genr_data_main.rds"))
knitr::opts_knit$set(root.dir = indata)
final_dd <- readRDS(paste0(indata, "genr_data_main.rds"))
png(paste0(fig, "hists_rsfmri_t1.png"))
par(mfrow = c(3,2))
hist(final_dd$mdt1_t1, nclass = 50, main = "MDT 1 T1", col="blue")
hist(final_dd$mdt2_t1, nclass = 50, main = "MDT 2 T1", col="blue")
hist(final_dd$mdt3_t1, nclass = 50, main = "MDT 3 T1", col="blue")
hist(final_dd$mdt4_t1, nclass = 50, main = "MDT 4 T1", col="blue")
hist(final_dd$mdt5_t1, nclass = 50, main = "MDT 5 T1", col="blue")
hist(final_dd$nt_t1, nclass = 50, main = "NT T1", col="blue")
dev.off()
png(paste0(fig, "hists_rsfmri_t2.png"))
par(mfrow = c(3,2))
hist(final_dd$mdt1_t2, nclass = 50, main = "MDT 1 T2", col="blue")
hist(final_dd$mdt2_t2, nclass = 50, main = "MDT 2 T2", col="blue")
hist(final_dd$mdt3_t2, nclass = 50, main = "MDT 3 T2", col="blue")
hist(final_dd$mdt4_t2, nclass = 50, main = "MDT 4 T2", col="blue")
hist(final_dd$mdt5_t2, nclass = 50, main = "MDT 5 T2", col="blue")
hist(final_dd$nt_t2, nclass = 50, main = "NT T2", col="blue")
dev.off()
png(paste0(fig, "hists_cbcl.png"))
par(mfrow = c(2,2))
hist(final_dd$int_t1, nclass = 50, main = "Internalising problems t1", col="blue")
hist(final_dd$int_t2, nclass = 50, main = "Internalising problems t2", col="blue")
hist(final_dd$ext_t1, nclass = 50, main = "Externalising problems t1", col="blue")
hist(final_dd$ext_t2, nclass = 50, main = "Externalising problems t2", col="blue")
dev.off()
# for int --> rsfMRI
a <- ggplot(final_dd, aes(int_t1, mdt1_t2)) +
geom_smooth()
b <- ggplot(final_dd, aes(int_t1, mdt2_t2)) +
geom_smooth()
c <- ggplot(final_dd, aes(int_t1, mdt3_t2)) +
geom_smooth()
d <- ggplot(final_dd, aes(int_t1, mdt4_t2)) +
geom_smooth()
e <- ggplot(final_dd, aes(int_t1, mdt5_t2)) +
geom_smooth()
f <- ggplot(final_dd, aes(int_t1, nt_t2)) +
geom_smooth()
all <- ggarrange(a, b, c, d, e, f + rremove("x.text"),
labels = c("A", "B", "C", "D", " E", "F"),
ncol = 2, nrow = 3)
all
ggsave("InternalisingTOrsfMRI.png", path = fig)
# rsfmri --> int
a <- ggplot(final_dd, aes(mdt1_t1, int_t2)) +
geom_smooth()
b <- ggplot(final_dd, aes(mdt2_t1, int_t2)) +
geom_smooth()
c <- ggplot(final_dd, aes(mdt3_t1, int_t2)) +
geom_smooth()
d <- ggplot(final_dd, aes(mdt4_t1, int_t2)) +
geom_smooth()
e <- ggplot(final_dd, aes(mdt5_t1, int_t2)) +
geom_smooth()
f <- ggplot(final_dd, aes(nt_t1, int_t2)) +
geom_smooth()
# NB 10: Removed 39 rows containing non-finite values (stat_smooth). --> ???
# it seems it's bc of the distribution of the rsfMRI data
all <- ggarrange(a, b, c, d, e, f + rremove("x.text"),
labels = c("A", "B", "C", "D", " E", "F"),
ncol = 2, nrow = 3)
all
ggsave("rsfMRI_to_Internalising.png", path = fig)
# non linear relationship  - also osmething weird happening with mdt1_t1
### externalising problems
# for ext --> rsfMRI
a <- ggplot(final_dd, aes(ext_t1, mdt1_t2)) +
geom_smooth()
b <- ggplot(final_dd, aes(ext_t1, mdt2_t2)) +
geom_smooth()
c <- ggplot(final_dd, aes(ext_t1, mdt3_t2)) +
geom_smooth()
d <- ggplot(final_dd, aes(ext_t1, mdt4_t2)) +
geom_smooth()
e <- ggplot(final_dd, aes(ext_t1, mdt5_t2)) +
geom_smooth()
f <- ggplot(final_dd, aes(ext_t1, nt_t2)) +
geom_smooth()
all <- ggarrange(a, b, c, d, e, f + rremove("x.text"),
labels = c("A", "B", "C", "D", " E", "F"),
ncol = 2, nrow = 3)
all
ggsave("externalisingTOrsfMRI.png", path = fig)
# rsfmri --> ext
a <- ggplot(final_dd, aes(mdt1_t1, ext_t2)) +
geom_smooth()
b <- ggplot(final_dd, aes(mdt2_t1, ext_t2)) +
geom_smooth()
c <- ggplot(final_dd, aes(mdt3_t1, ext_t2)) +
geom_smooth()
d <- ggplot(final_dd, aes(mdt4_t1, ext_t2)) +
geom_smooth()
e <- ggplot(final_dd, aes(mdt5_t1, ext_t2)) +
geom_smooth()
f <- ggplot(final_dd, aes(nt_t1, ext_t2)) +
geom_smooth()
# NB 10: Removed 39 rows containing non-finite values (stat_smooth). --> ???
# it seems it's bc of the distribution of the rsfMRI data
all <- ggarrange(a, b, c, d, e, f + rremove("x.text"),
labels = c("A", "B", "C", "D", " E", "F"),
ncol = 2, nrow = 3)
all
ggsave("rsfMRI_to_externalising.png", path = fig)
# non linear relationship  - also osmething weird happening with mdt1_t1
### violin plots for covariates  ###
# for int
a <- ggplot(final_dd, aes(x = sex, y = int_t2, fill = sex)) + geom_violin(trim = F)
b <- ggplot(final_dd, aes(x = mat_edu, y = int_t2, fill = mat_edu)) + geom_violin(trim = F)
c <- ggplot(final_dd, aes(x = ethn, y = int_t2, fill = ethn)) + geom_violin(trim = F)
all <- ggarrange(a, b, c + rremove("x.text"),
labels = c("A", "B", "C"),
ncol = 1, nrow = 3)
all
ggsave("Int_by_covs.png", path = fig)
# for ext
a <- ggplot(final_dd, aes(x = sex, y = ext_t2, fill = sex)) + geom_violin(trim = F)
b <- ggplot(final_dd, aes(x = mat_edu, y = ext_t2, fill = mat_edu)) + geom_violin(trim = F)
c <- ggplot(final_dd, aes(x = ethn, y = ext_t2, fill = ethn)) + geom_violin(trim = F)
all <- ggarrange(a, b, c + rremove("x.text"),
labels = c("A", "B", "C"),
ncol = 1, nrow = 3)
all
ggsave("Ext_by_covs.png", path = fig)
# for nt
a <- ggplot(final_dd, aes(x = sex, y = nt_t2, fill = sex)) + geom_violin(trim = F)
b <- ggplot(final_dd, aes(x = mat_edu, y = nt_t2, fill = mat_edu)) + geom_violin(trim = F)
c <- ggplot(final_dd, aes(x = ethn, y = nt_t2, fill = ethn)) + geom_violin(trim = F)
all <- ggarrange(a, b, c + rremove("x.text"),
labels = c("A", "B", "C"),
ncol = 1, nrow = 3)
all
